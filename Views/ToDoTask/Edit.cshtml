@model To_Do_List.Models.Entity.TaskWrapper

@{
    string title = @ViewBag.Action + " Task";
    ViewData["Title"] = title;
}

<h1>@ViewBag.Title</h1>

<h4>Task</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="task" class="control-label">Task</label>
                <input asp-for="task" class="form-control" />
                <span asp-validation-for="task" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RecievedTime" class="control-label">Date Set</label>
                <input asp-for="RecievedTime" class="form-control" />
                <span asp-validation-for="RecievedTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DueDate" class="control-label">Due Date</label>
                <input asp-for="DueDate" class="form-control" />
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsCompleted" /> @Html.DisplayNameFor(model => model.IsCompleted)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
